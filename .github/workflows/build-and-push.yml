name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Read Docker metadata
      id: meta
      run: |
        DOCKER_META=$(cat docker.json)
        echo "version=$(echo $DOCKER_META | jq -r '.version')" >> $GITHUB_OUTPUT
        echo "description=$(echo $DOCKER_META | jq -r '.description')" >> $GITHUB_OUTPUT
        echo "php_version=$(echo $DOCKER_META | jq -r '.php_version')" >> $GITHUB_OUTPUT
        echo "dockerfile=$(echo $DOCKER_META | jq -r '.build.dockerfile')" >> $GITHUB_OUTPUT

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: docker_meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=php${{ steps.meta.outputs.php_version }},enable={{is_default_branch}}
          type=raw,value=php${{ steps.meta.outputs.php_version }}-${{ steps.meta.outputs.version }}
        labels: |
          org.opencontainers.image.title=API Platform Base
          org.opencontainers.image.description=${{ steps.meta.outputs.description }}
          org.opencontainers.image.version=${{ steps.meta.outputs.version }}
          org.opencontainers.image.vendor=API Platform Community
          org.opencontainers.image.licenses=MIT

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ steps.meta.outputs.dockerfile }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        subject-digest: ${{ steps.build.outputs.digest }}
        push-to-registry: true
